// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  id    Int     @id @default(autoincrement())
  user String  @unique
  password  String?  @db.Text 
  correo String?
  foto Bytes
  estatus Int @default(0)
  regDate DateTime @default(now())
  grados   Grado[] 
  grupos   Grupo[] 
  materias Materia[]
  alumnos Alumno[]
 
}

model Grado{
  id    Int     @id @default(autoincrement())
  grado String 
  estatus Int  @default(0)
  regDate DateTime @default(now())
  usuario   Users   @relation(fields: [idUsuario], references: [id])
  idUsuario Int
  alumnos Alumno[]
  materialDidactico MaterialDidactico[]
}

model Grupo{
  id    Int     @id @default(autoincrement())
  grupo String 
  estatus Int  @default(0)
  regDate DateTime @default(now())
  usuario   Users   @relation(fields: [idUsuario], references: [id])
  idUsuario Int
  alumnos Alumno[]
  materialDidactico MaterialDidactico[]
}

model Materia{
  id    Int     @id @default(autoincrement())
  materia String  @db.VarChar(255)
  estatus Int  @default(0)
  regDate DateTime @default(now())
  usuario   Users   @relation(fields: [idUsuario], references: [id])
  idUsuario Int
  alumnos   AlumnoMateria[]
   materialDidactico MaterialDidactico[]
}

model Alumno{
  id  String @db.VarChar(255) @id  
  noLista Int
  nombre String
  apellidoPaterno String
  apellidoMaterno String?
  codigoBarras String
  estatus Int  @default(0)
  foto Bytes
  regDate  DateTime @default(now())
  usuario   Users   @relation(fields: [idUsuario], references: [id])
  idUsuario Int
  grado   Grado   @relation(fields: [idGrado], references: [id])
  idGrado Int
  grupo   Grupo   @relation(fields: [idGrupo], references: [id])
  idGrupo Int
   materias         AlumnoMateria[]
}

model AlumnoMateria {
  id  String @db.VarChar(255) @id  
  alumno    Alumno   @relation(fields: [idAlumno], references: [id])
  idAlumno  String
  materia   Materia  @relation(fields: [idMateria], references: [id])
  idMateria Int
  regDate   DateTime @default(now())

  @@unique([idAlumno, idMateria])
}

model MaterialDidactico{
  id  String @db.VarChar(255) @id 
  tipo String  @db.VarChar(30) 
  url String  @db.VarChar(255) 
  titulo String  @db.VarChar(255) 
  descripcion String @db.VarChar(255)
  miniatura Bytes @db.Blob()
  file Bytes      @db.Blob()
  regDate  DateTime @default(now())
  
  grado   Grado   @relation(fields: [idGrado], references: [id])
  idGrado Int
  grupo   Grupo   @relation(fields: [idGrupo], references: [id])
  idGrupo Int
  materia   Materia   @relation(fields: [idMateria], references: [id])
  idMateria Int
}
